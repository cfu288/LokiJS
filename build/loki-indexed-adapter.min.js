!function(root,factory){"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?module.exports=factory():root.LokiIndexedAdapter=factory()}(this,(function(){return function(){function LokiIndexedAdapter(appname,options){if(this.app="loki",this.options=options||{},void 0!==appname&&(this.app=appname),this.catalog=null,!this.checkAvailability())throw new Error("indexedDB does not seem to be supported for your environment")}function LokiCatalog(callback){this.db=null,this.initializeLokiCatalog(callback)}return LokiIndexedAdapter.prototype.closeDatabase=function(){this.catalog&&this.catalog.db&&(this.catalog.db.close(),this.catalog.db=null)},LokiIndexedAdapter.prototype.checkAvailability=function(){return!("undefined"==typeof indexedDB||!indexedDB)},LokiIndexedAdapter.prototype.loadDatabase=function(dbname,callback){var appName=this.app,adapter=this;null!==this.catalog&&null!==this.catalog.db?this.catalog.getAppKey(appName,dbname,(function(result){if("function"==typeof callback){if(0===result.id)return void callback(null);callback(result.val)}else console.log(result.val)})):this.catalog=new LokiCatalog((function(cat){adapter.catalog=cat,adapter.loadDatabase(dbname,callback)}))},LokiIndexedAdapter.prototype.loadKey=LokiIndexedAdapter.prototype.loadDatabase,LokiIndexedAdapter.prototype.saveDatabase=function(dbname,dbstring,callback){var appName=this.app,adapter=this;function saveCallback(result){result&&!0===result.success?callback(null):callback(new Error("Error saving database")),adapter.options.closeAfterSave&&adapter.closeDatabase()}null!==this.catalog&&null!==this.catalog.db?this.catalog.setAppKey(appName,dbname,dbstring,saveCallback):this.catalog=new LokiCatalog((function(cat){adapter.saveDatabase(dbname,dbstring,saveCallback)}))},LokiIndexedAdapter.prototype.saveKey=LokiIndexedAdapter.prototype.saveDatabase,LokiIndexedAdapter.prototype.deleteDatabase=function(dbname,callback){var appName=this.app,adapter=this;null!==this.catalog&&null!==this.catalog.db?this.catalog.getAppKey(appName,dbname,(function(result){var id=result.id;0!==id?adapter.catalog.deleteAppKey(id,callback):"function"==typeof callback&&callback({success:!0})})):this.catalog=new LokiCatalog((function(cat){adapter.catalog=cat,adapter.deleteDatabase(dbname,callback)}))},LokiIndexedAdapter.prototype.deleteKey=LokiIndexedAdapter.prototype.deleteDatabase,LokiIndexedAdapter.prototype.deleteDatabasePartitions=function(dbname){var self=this;this.getDatabaseList((function(result){result.forEach((function(str){str.startsWith(dbname)&&self.deleteDatabase(str)}))}))},LokiIndexedAdapter.prototype.getDatabaseList=function(callback){var appName=this.app,adapter=this;null!==this.catalog&&null!==this.catalog.db?this.catalog.getAppKeys(appName,(function(results){for(var names=[],idx=0;idx<results.length;idx++)names.push(results[idx].key);"function"==typeof callback?callback(names):names.forEach((function(obj){console.log(obj)}))})):this.catalog=new LokiCatalog((function(cat){adapter.catalog=cat,adapter.getDatabaseList(callback)}))},LokiIndexedAdapter.prototype.getKeyList=LokiIndexedAdapter.prototype.getDatabaseList,LokiIndexedAdapter.prototype.getCatalogSummary=function(callback){this.app;var adapter=this;null!==this.catalog&&null!==this.catalog.db?this.catalog.getAllKeys((function(results){for(var obj,size,oapp,okey,oval,entries=[],idx=0;idx<results.length;idx++)oapp=(obj=results[idx]).app||"",okey=obj.key||"",oval=obj.val||"",size=2*oapp.length+2*okey.length+oval.length+1,entries.push({app:obj.app,key:obj.key,size:size});"function"==typeof callback?callback(entries):entries.forEach((function(obj){console.log(obj)}))})):this.catalog=new LokiCatalog((function(cat){adapter.catalog=cat,adapter.getCatalogSummary(callback)}))},LokiCatalog.prototype.initializeLokiCatalog=function(callback){var openRequest=indexedDB.open("LokiCatalog",1),cat=this;openRequest.onupgradeneeded=function(e){var thisDB=e.target.result;if(thisDB.objectStoreNames.contains("LokiAKV")&&thisDB.deleteObjectStore("LokiAKV"),!thisDB.objectStoreNames.contains("LokiAKV")){var objectStore=thisDB.createObjectStore("LokiAKV",{keyPath:"id",autoIncrement:!0});objectStore.createIndex("app","app",{unique:!1}),objectStore.createIndex("key","key",{unique:!1}),objectStore.createIndex("appkey","appkey",{unique:!0})}},openRequest.onsuccess=function(e){cat.db=e.target.result,"function"==typeof callback&&callback(cat)},openRequest.onerror=function(e){throw e}},LokiCatalog.prototype.getAppKey=function(app,key,callback){var usercallback,appkey=app+","+key,request=this.db.transaction(["LokiAKV"],"readonly").objectStore("LokiAKV").index("appkey").get(appkey);request.onsuccess=(usercallback=callback,function(e){var lres=e.target.result;null==lres&&(lres={id:0,success:!1}),"function"==typeof usercallback?usercallback(lres):console.log(lres)}),request.onerror=function(usercallback){return function(e){if("function"!=typeof usercallback)throw e;usercallback({id:0,success:!1})}}(callback)},LokiCatalog.prototype.getAppKeyById=function(id,callback,data){this.db.transaction(["LokiAKV"],"readonly").objectStore("LokiAKV").get(id).onsuccess=function(data,usercallback){return function(e){"function"==typeof usercallback?usercallback(e.target.result,data):console.log(e.target.result)}}(data,callback)},LokiCatalog.prototype.setAppKey=function(app,key,val,callback){var usercallback,store=this.db.transaction(["LokiAKV"],"readwrite").objectStore("LokiAKV"),index=store.index("appkey"),appkey=app+","+key,request=index.get(appkey);request.onsuccess=function(e){var res=e.target.result;null==res?res={app:app,key:key,appkey:app+","+key,val:val}:res.val=val;var usercallback,requestPut=store.put(res);requestPut.onerror=(usercallback=callback,function(e){"function"==typeof usercallback?usercallback({success:!1}):(console.error("LokiCatalog.setAppKey (set) onerror"),console.error(request.error))}),requestPut.onsuccess=function(usercallback){return function(e){"function"==typeof usercallback&&usercallback({success:!0})}}(callback)},request.onerror=(usercallback=callback,function(e){"function"==typeof usercallback?usercallback({success:!1}):(console.error("LokiCatalog.setAppKey (get) onerror"),console.error(request.error))})},LokiCatalog.prototype.deleteAppKey=function(id,callback){var usercallback,request=this.db.transaction(["LokiAKV"],"readwrite").objectStore("LokiAKV").delete(id);request.onsuccess=(usercallback=callback,function(evt){"function"==typeof usercallback&&usercallback({success:!0})}),request.onerror=function(usercallback){return function(evt){"function"==typeof usercallback?usercallback({success:!1}):(console.error("LokiCatalog.deleteAppKey raised onerror"),console.error(request.error))}}(callback)},LokiCatalog.prototype.getAppKeys=function(app,callback){var usercallback,index=this.db.transaction(["LokiAKV"],"readonly").objectStore("LokiAKV").index("app"),singleKeyRange=IDBKeyRange.only(app),cursor=index.openCursor(singleKeyRange);cursor.onsuccess=function(data,callback){return function(e){var cursor=e.target.result;if(cursor){var currObject=cursor.value;data.push(currObject),cursor.continue()}else"function"==typeof callback?callback(data):console.log(data)}}([],callback),cursor.onerror=(usercallback=callback,function(e){"function"==typeof usercallback?usercallback(null):(console.error("LokiCatalog.getAppKeys raised onerror"),console.error(e))})},LokiCatalog.prototype.getAllKeys=function(callback){var usercallback,cursor=this.db.transaction(["LokiAKV"],"readonly").objectStore("LokiAKV").openCursor();cursor.onsuccess=function(data,callback){return function(e){var cursor=e.target.result;if(cursor){var currObject=cursor.value;data.push(currObject),cursor.continue()}else"function"==typeof callback?callback(data):console.log(data)}}([],callback),cursor.onerror=(usercallback=callback,function(e){"function"==typeof usercallback&&usercallback(null)})},LokiIndexedAdapter}()}));
