var R=Object.defineProperty;var l=(h,t)=>R(h,"name",{value:t,configurable:!0});var P=(h,t,e)=>{if(!t.has(h))throw TypeError("Cannot "+e)};var D=(h,t,e)=>(P(h,t,"read from private field"),e?e.call(h):t.get(h)),f=(h,t,e)=>{if(t.has(h))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(h):t.set(h,e)};var m=(h,t,e)=>(P(h,t,"access private method"),e);var g=(h,t,e)=>new Promise((s,o)=>{var n=r=>{try{i(e.next(r))}catch(c){o(c)}},a=r=>{try{i(e.throw(r))}catch(c){o(c)}},i=r=>r.done?s(r.value):Promise.resolve(r.value).then(n,a);i((e=e.apply(h,t)).next())});var b,S,B,p=class{constructor(){f(this,b);f(this,B,l(()=>g(this,null,function*(){let t=m(this,b,S).call(this);return new Promise((e,s)=>{t.onsuccess=({target:o})=>{this.db=o.result,e(this)},t.onerror=o=>{s(o)}})}),"#initializeCatalog"));this.db=null}initialize(){return new Promise((t,e)=>{D(this,B).call(this).then(s=>{t(s)}).catch(s=>{console.log(s),e(s)})})}getAppKeyAsync(t,e){return g(this,null,function*(){let n=this.db.transaction(["IDBAKV"],"readonly").objectStore("IDBAKV").index("appkey"),a=`${t},${e}`,i=n.get(a);return new Promise((r,c)=>{i.onsuccess=({target:u})=>{let y=u.result;(y===null||typeof y=="undefined")&&(y={id:0,success:!1}),r(y)},i.onerror=u=>{c(u)}})})}setAppKeyAsync(t,e,s){return g(this,null,function*(){let n=this.db.transaction(["IDBAKV"],"readwrite").objectStore("IDBAKV"),a=n.index("appkey"),i=`${t},${e}`,r=a.get(i);return new Promise((c,u)=>{r.onsuccess=({target:y})=>{let A=y.result;A==null?A={app:t,key:e,appkey:`${t},${e}`,val:s}:A.val=s;let E=n.put(A);E.onerror=()=>{u({success:!1,error:E.error}),console.error("IDBCatalog.setAppKey (set) onerror"),console.error(r.error)},E.onsuccess=()=>{c({success:!0})}},r.onerror=()=>{u({success:!1,error:r.error}),console.error("IDBCatalog.setAppKey (get) onerror"),console.error(r.error)}})})}deleteAppKeyAsync(t){let o=this.db.transaction(["IDBAKV"],"readwrite").objectStore("IDBAKV").delete(t);return new Promise((n,a)=>{o.onsuccess=()=>{n({success:!0})},o.onerror=i=>{a({success:!1,error:i}),console.error("IDBCatalog.deleteAppKey raised onerror"),console.error(o.error)}})}getAppKeysAsync(t){return g(this,null,function*(){let o=this.db.transaction(["IDBAKV"],"readonly").objectStore("IDBAKV").index("app"),n=IDBKeyRange.only(t),a=o.openCursor(n),i=[];return new Promise((r,c)=>{a.onsuccess=()=>{let u=a.result;if(u){let y=u.value;i.push(y),u.continue()}else r(i)},a.onerror=u=>{c(u)}})})}getAllKeys(t){let o=this.db.transaction(["IDBAKV"],"readonly").objectStore("IDBAKV").openCursor(),n=[];o.onsuccess=((a,i)=>({target:r})=>{let c=r.result;if(c){let u=c.value;a.push(u),c.continue()}else typeof i=="function"?i(a):console.log(a)})(n,t),o.onerror=(a=>i=>{typeof a=="function"&&a(null)})(t)}};l(p,"IDBCatalog"),b=new WeakSet,S=l(function(){let t=indexedDB.open("IDBCatalog",1);return t.onupgradeneeded=({target:e})=>{let s=e.result;if(s.objectStoreNames.contains("IDBAKV")&&s.deleteObjectStore("IDBAKV"),!s.objectStoreNames.contains("IDBAKV")){let o=s.createObjectStore("IDBAKV",{keyPath:"id",autoIncrement:!0});o.createIndex("app","app",{unique:!1}),o.createIndex("key","key",{unique:!1}),o.createIndex("appkey","appkey",{unique:!0})}},t},"#openCatalog"),B=new WeakMap;var d=typeof window!="undefined"&&!!window.__loki_idb_debug;d&&console.log("DEBUG: Running indexeddb-adapter in DEBUG mode");var I,K,v,w=class{constructor(t){f(this,K);f(this,I,l(()=>{this.catalog&&this.catalog.db&&(this.catalog.db.close(),this.catalog.db=null)},"#closeDatabase"));this.loadDatabase=l((t,e)=>{if(d&&console.debug("loading database"),this.catalog===null||this.catalog.db===null){new p().initialize().then(s=>{this.catalog=s,this.loadDatabase(t,e)});return}this.catalog.getAppKeyAsync(this.app,t).then(s=>{let{success:o}=s;if(o===!1)e(null);else{let{val:n}=s;this.options.beforeReadFromIDB?this.options.beforeReadFromIDB(n).then(a=>{d&&console.debug(`DESERIALIZED STRING: ${a}`),e(a)}).catch(a=>{console.error(a),e(a)}):e(n)}}).catch(s=>{console.error(s),e(s)})},"loadDatabase");this.loadDatabaseAsync=l(t=>g(this,null,function*(){return d&&console.debug("loading database"),new Promise((e,s)=>{let o=l(()=>this.catalog.getAppKeyAsync(this.app,t).then(n=>{let{success:a}=n;if(a===!1)s(null);else{let{val:i}=n,r=i;this.options.beforeReadFromIDB?this.options.beforeReadFromIDB(r).then(c=>{d&&console.debug(`DESERIALIZED STRING: ${c}`),e(c)}).catch(c=>{s(c)}):e(r)}}),"doLoad");this.catalog===null||this.catalog.db===null?new p().initialize().then(n=>{this.catalog=n,o()}).catch(n=>{s(n)}):o()})}),"loadDatabaseAsync");this.saveDatabase=l((t,e,s)=>{d&&console.debug(`in saveDatabase(${t}, ${e}, ${s})`);let o=l(()=>{this.options.beforeWriteToIDB?this.options.beforeWriteToIDB(e).then(n=>{d&&console.debug(`SERIALIZED STRING: ${n}`),this.catalog.setAppKeyAsync(this.app,t,n).then(a=>{s(a)}).catch(a=>{s(a)})}).catch(n=>{s(n)}):(d&&console.debug(`SERIALIZED STRING: ${e}`),this.catalog.setAppKeyAsync(this.app,t,e).then(n=>{s(n)}).catch(n=>{s(n)}))},"doSave");this.catalog===null||this.catalog.db===null?new p().initialize().then(n=>{this.catalog=n,this.saveDatabaseAsync(t,e).then(()=>{s(void 0)}).catch(a=>{s(new Error("Error saving database: "+a))}).finally(()=>{this.options.closeAfterSave===!0&&D(this,I).call(this)})}).catch(n=>{s(new Error("Error saving database: "+n))}):o()},"saveDatabase");this.deleteDatabase=l((t,e)=>{if(this.catalog===null||this.catalog.db===null){new p().initialize().then(s=>{this.catalog=s,this.deleteDatabase(t,e)}).catch(s=>{e(new Error("Error deleting database: "+s))});return}this.catalog.getAppKeyAsync(this.app,t).then(s=>{let o=s.id;o!==0&&this.catalog.deleteAppKeyAsync(o).then(n=>{typeof e=="function"&&e(n)}).catch(n=>{typeof e=="function"&&e({success:!1,error:n})})}).catch(s=>{typeof e=="function"&&e({success:!1,error:s})})},"deleteDatabase");this.deleteDatabasePartitions=l(t=>{this.getDatabaseList(e=>{if(e instanceof Error)throw e;e.forEach(s=>{s.startsWith(t)&&this.deleteDatabase(s)})})},"deleteDatabasePartitions");this.getDatabaseList=l(t=>{if(this.catalog===null||this.catalog.db===null){new p().initialize().then(e=>{this.catalog=e,this.getDatabaseList(t)}).catch(e=>{t(new Error("Error getting database list: "+e))});return}this.catalog.getAppKeysAsync(this.app).then(e=>{let s=[];for(let o=0;o<e.length;o++)s.push(e[o].key);typeof t=="function"&&t(s)}).catch(e=>{t(e)})},"getDatabaseList");this.getDatabaseListAsync=l(()=>new Promise((t,e)=>{this.catalog===null||this.catalog.db===null?new p().initialize().then(s=>{this.catalog=s,this.catalog.getAppKeysAsync(this.app).then(o=>{let n=o.map(a=>a.key);t(n)}).catch(o=>{e(o)})}).catch(s=>{e(s)}):this.catalog.getAppKeysAsync(this.app).then(s=>{let o=s.map(n=>n.key);t(o)}).catch(s=>{e(s)})}),"getDatabaseListAsync");this.getCatalogSummary=l(t=>{if(this.catalog===null||this.catalog.db===null){new p().initialize().then(e=>{this.catalog=e,this.getCatalogSummary(t)}).catch(e=>{t(new Error("Error getting database list: "+e))});return}this.catalog.getAllKeys(e=>{let s=[],o,n,a,i,r;for(let c=0;c<e.length;c++)o=e[c],a=o.app||"",i=o.key||"",r=o.val||"",n=a.length*2+i.length*2+r.length+1,s.push({app:o.app,key:o.key,size:n});typeof t=="function"&&t(s)})},"getCatalogSummary");if(d&&console.log("Initialized crypted-indexeddb-adapter"),this.app="sylvie",this.options=t||{},typeof(t==null?void 0:t.appname)!="undefined"&&(this.app=t==null?void 0:t.appname),this.catalog=null,!m(this,K,v).call(this))throw new Error("IndexedDB does not seem to be supported for your environment")}saveDatabaseAsync(t,e){return g(this,null,function*(){return new Promise((s,o)=>{let n=l(()=>{this.options.beforeWriteToIDB?this.options.beforeWriteToIDB(e).then(a=>{d&&console.debug(`ENCRYPTED STRING: ${a}`),this.catalog.setAppKeyAsync(this.app,t,a).then(i=>{i.success===!0?s():o(i)}).catch(i=>{o(i)})}).catch(a=>{o(a)}):(d&&console.debug(`SERIALIZED STRING: ${e}`),this.catalog.setAppKeyAsync(this.app,t,e).then(a=>{a.success===!0?s():o(a)}).catch(a=>{o(a)}))},"doSave");this.catalog===null||this.catalog.db===null?new p().initialize().then(a=>{this.catalog=a,this.saveDatabaseAsync(t,e).then(s).catch(i=>{o(new Error("Error saving database: "+i))}).finally(()=>{this.options.closeAfterSave===!0&&D(this,I).call(this)})}).catch(a=>{o(a)}):n()})})}deleteDatabaseAsync(t){return g(this,null,function*(){return new Promise((e,s)=>{let o=l(()=>this.catalog.getAppKeyAsync(this.app,t).then(n=>{let a=n.id;a!==0&&this.catalog.deleteAppKeyAsync(a).then(i=>{i.success===!0?e():s(i)}).catch(i=>{s(i)})}).catch(n=>{s(n)}),"doDelete");this.catalog===null||this.catalog.db===null?new p().initialize().then(n=>{this.catalog=n,o()}).catch(n=>{s(n)}):o()})})}};l(w,"IndexedDBAdapter"),I=new WeakMap,K=new WeakSet,v=l(function(){return!!(typeof indexedDB!="undefined"&&indexedDB)},"#checkIDBAvailability");typeof window!="undefined"&&Object.assign(window,{IndexedDBAdapter:w});export{w as IndexedDBAdapter};
//# sourceMappingURL=indexeddb-adapter.js.map
